// appointments: A privacy respecting appointment booking system
// Copyright (C) 2021 Morgan Hill

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published
// by the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.

// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

syntax = "proto3";
import "google/protobuf/timestamp.proto";

package appointments;

service AppointmentGiver {
	rpc GetLocations(GetLocationsRequest) returns (GetLocationsReply);
	rpc GetAvailability(GetAvailabilityRequest) returns (GetAvailabilityReply);
	rpc BookAppointment(BookAppointmentRequest) returns (BookAppointmentReply);
	rpc GetAppointment(GetAppointmentRequest) returns (GetAppointmentReply);
	rpc CancelAppointment(CancelAppointmentRequest) returns (CancelAppointmentReply);
}

message GetLocationsRequest {}

message GetLocationsReply {
	Locations locations = 1;
	message Locations {
		repeated string location = 1;
	}
}

message TimeSpan {
	google.protobuf.Timestamp start = 1;
	google.protobuf.Timestamp end = 2;
}

message GetAvailabilityRequest {
	repeated string Location = 1;
	TimeSpan timespan = 2;
}

message Uuid {
	string uuid = 1;
}

message Slot {
	Uuid uuid = 1;
	TimeSpan timespan = 2;
	uint32 capacity = 3;
	uint32 availability = 4;
	// capcity - availability = taken
}

message GetAvailabilityReply {
	Availability availability = 1;
	message Availability {
		repeated Slot slot = 1;
	}	
}

message BookAppointmentRequest {
	Slot slot = 1;
}

message Appointment {
	Uuid uuid = 1;
	Slot slot = 2;
}

message BookAppointmentReply {
	Appointment appointment = 1;
}

message GetAppointmentRequest {
	Uuid appointment = 1;
}

message GetAppointmentReply {
	Appointment appointment = 1;
}

message CancelAppointmentRequest {
	Appointment appointment = 1;
}

message CancelAppointmentReply {
	bool okay = 1;
}
